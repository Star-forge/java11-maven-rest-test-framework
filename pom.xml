<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>me.starforge</groupId>
  <artifactId>java11-maven-rest-test-framework</artifactId>
  <version>1.0-SNAPSHOT</version>

  <name>java11-maven-rest-test-framework</name>
  <description>A simple java11-maven-rest-test-framework.</description>

  <properties>
    <project.test.parallelCount>1</project.test.parallelCount>
    <tags>github</tags>
    <!--сборка-->
    <java.version>11</java.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.release>11</maven.compiler.release>
    <aspectjweaver.version>1.9.6</aspectjweaver.version>
    <maven-surefire-plugin.version>3.0.0-M3</maven-surefire-plugin.version>
    <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
    <lombok.version>1.18.16</lombok.version>

    <!--проект тестирования-->
    <jsonassert.version>1.5.0</jsonassert.version>
    <jetty.version>9.4.5.v20170502</jetty.version>
    <allure-junit5.version>2.13.8</allure-junit5.version>
    <allure.version>2.10.0</allure.version>
    <junit.jupiter.version>5.7.0</junit.jupiter.version>
    <junit.platform.version>1.7.0</junit.platform.version>
    <assertj.version>3.9.1</assertj.version>
    <rest.assured.version>4.3.3</rest.assured.version>
    <allure-rest-assured.version>2.13.8</allure-rest-assured.version>

    <logback-classic.version>1.2.3</logback-classic.version>
    <elk.version>6.3</elk.version>
  </properties>

  <dependencies>
    <!-- autotest's code quality-->
    <dependency>
      <groupId>org.sonarsource.scanner.maven</groupId>
      <artifactId>sonar-maven-plugin</artifactId>
      <version>3.8.0.2131</version>
    </dependency> <!-- sonar -->

    <!-- testing tools and modules-->
    <dependency>
      <groupId>org.skyscreamer</groupId>
      <artifactId>jsonassert</artifactId>
      <version>${jsonassert.version}</version>
    </dependency> <!-- сравнение json -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <version>${junit.jupiter.version}</version>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>${junit.jupiter.version}</version>
    </dependency>
    <dependency>
      <groupId>org.junit.platform</groupId>
      <artifactId>junit-platform-engine</artifactId>
      <version>${junit.platform.version}</version>
    </dependency>
    <dependency>
      <groupId>org.junit.platform</groupId>
      <artifactId>junit-platform-launcher</artifactId>
      <version>${junit.platform.version}</version>
    </dependency>
    <dependency>
      <groupId>org.junit.platform</groupId>
      <artifactId>junit-platform-runner</artifactId>
      <version>${junit.platform.version}</version>
      <exclusions>
        <exclusion>
          <groupId>junit</groupId>
          <artifactId>junit</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-params</artifactId>
      <version>${junit.jupiter.version}</version>
    </dependency>
    <dependency>
      <groupId>io.rest-assured</groupId>
      <artifactId>rest-assured</artifactId>
      <version>${rest.assured.version}</version>
    </dependency>


    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>2.12.1</version>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>${lombok.version}</version>
      <scope>provided</scope>
    </dependency> <!-- Lombok -->

    <!-- reporting -->
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>${logback-classic.version}</version>
    </dependency> <!-- logback-classic -->
    <dependency>
      <groupId>net.logstash.logback</groupId>
      <artifactId>logstash-logback-encoder</artifactId>
      <version>${elk.version}</version>
    </dependency>
    <dependency>
      <groupId>io.qameta.allure</groupId>
      <artifactId>allure-rest-assured</artifactId>
      <version>${allure-rest-assured.version}</version>
    </dependency>
    <dependency>
      <groupId>io.qameta.allure</groupId>
      <artifactId>allure-junit5</artifactId>
      <version>${allure-junit5.version}</version>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-plugin.version}</version>
        <configuration>
<!--          <source>${java.version}</source>--> <!-- for java8 -->
<!--          <target>${java.version}</target>-->
          <release>${java.version}</release>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven-surefire-plugin.version}</version>
        <configuration>
          <groups>${tags}</groups>
          <forkCount>${project.test.parallelCount}</forkCount>
          <reuseForks>false</reuseForks>
          <properties>
            <property>
              <name>listener</name>
              <value>io.qameta.allure.junit5.AllureJunit5</value>
            </property>
          </properties>
          <includes>
            <include>**/*Test*.java</include>
          </includes>
          <!--aspectjweaver используется для отслеживания тестов. Без него не работает аннотация @Step-->
          <argLine>
            -javaagent:${settings.localRepository}/org/aspectj/aspectjweaver/${aspectjweaver.version}/aspectjweaver-${aspectjweaver.version}.jar
            -Dfile.encoding=UTF-8
          </argLine>
          <systemProperties>
            <property>
              <name>allure.results.directory</name>
              <value>${project.build.directory}/allure-results</value>
            </property>
            <property>
              <name>junit.jupiter.extensions.autodetection.enabled</name>
              <value>true</value>
            </property>
          </systemProperties>
          <reportFormat>plain</reportFormat>
          <!--testFailureIgnore позволяет продолжить сборку, даже если тесты failed-->
          <testFailureIgnore>true</testFailureIgnore>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjweaver</artifactId>
            <version>${aspectjweaver.version}</version>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-maven-plugin</artifactId>
        <version>${jetty.version}</version>
        <configuration>
          <webAppSourceDirectory>
            ${project.build.directory}/site/allure-maven-plugin
          </webAppSourceDirectory>
        </configuration>
      </plugin>
      <plugin>
        <groupId>io.qameta.allure</groupId>
        <artifactId>allure-maven</artifactId>
        <version>${allure.version}</version>
      </plugin>
    </plugins>
  </build>

  <reporting>
    <excludeDefaults>true</excludeDefaults>
    <plugins>
      <plugin>
        <groupId>io.qameta.allure</groupId>
        <artifactId>allure-maven</artifactId>
        <version>${allure.version}</version>
        <configuration>
          <outputDirectory>${project.build.directory}/allure-reports</outputDirectory>
          <resultsDirectory>${project.build.directory}/allure-results</resultsDirectory>
          <reportVersion>${allure.version}</reportVersion>
        </configuration>
      </plugin>
    </plugins>
  </reporting>
</project>
